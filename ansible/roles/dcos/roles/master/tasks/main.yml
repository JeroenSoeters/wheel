- name: create volume group
  lvg: vg={{ item.name }} pvs={{ item.physical_volumes }}
  with_items: "{{ volume_groups|default([]) }}"

- name: create logical volume for group
  lvol: vg={{ item.0.name }} lv={{ item.1.name }} size={{ item.1.size }} state=present
  with_subelements:
    - "{{ volume_groups|default([]) }}"
    - volumes

- name: create xfs filesystem
  filesystem: fstype=xfs dev=/dev/{{ item.0.name }}/{{ item.1.name }} resizefs=yes
  with_subelements:
    - "{{ volume_groups|default([]) }}"
    - volumes

- name: mount new dcos_volume
  mount: name={{ item.1.mount_point }} src=/dev/mapper/{{ item.0.name }}-{{ item.1.name }} fstype=xfs state=mounted
  with_subelements:
    - "{{ volume_groups|default([]) }}"
    - volumes

- name: checking if dc/os is already installed
  uri: url="http://{{ ansible_default_ipv4["address"] }}:8181"
  register: dcos_available
  ignore_errors: yes

- name: get install script
  sudo: true
  get_url: url={{ dcos_master_agent_install_url }} dest=/tmp/dcos/dcos_install.sh force=no mode=0755
  when: dcos_available|failed

- name: run installer for master
  sudo: true
  shell: ./dcos_install.sh master
  args:
    chdir: "/tmp/dcos"
    executable: /usr/bin/bash
  when: dcos_available|failed

- name: configure proxy to download packages from universe
  template: src=environment.proxy dest=/var/lib/dcos/environment.proxy
  notify:
    - reload dcos-cosmos
  when: set_proxy == true
