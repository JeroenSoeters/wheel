- name: create volume group {{ item.name }}
  lvg: vg={{ item.name }} pvs={{ item.physical_volumes }}
  with_items: "{{ volume_groups }}"
  when: volume_groups is defined

- name: create logical volume {{ item.1.name }} under group {{ item.0.name }}
  lvol: vg={{ item.0.name }} lv={{ item.1.name }} size={{ item.1.size }} state=present
  with_subelements:
    - "{{ volume_groups }}"
    - volumes
  when: volume_groups is defined

- name: create xfs filesystem on /dev/{{ item.0.name }}/{{ item.1.name }}
  filesystem: fstype=xfs dev=/dev/{{ item.0.name }}/{{ item.1.name }} resizefs=yes
  with_subelements:
    - "{{ volume_groups }}"
    - volumes
  when: volume_groups is defined

- name: mount new dcos_volume
  mount: name={{ item.1.mount_point }} src=/dev/mapper/{{ item.0.name }}-{{ item.1.name }} fstype=xfs state=mounted
  with_subelements:
    - "{{ volume_groups }}"
    - volumes
  when: volume_groups is defined

- name: get install script
  get_url: url={{ dcos_master_agent_install_url }} dest=/tmp/dcos/dcos_install.sh force=no mode=0755
  register: get_install_script

- name: copy docker registry credentials
  sudo: true
  copy: src=docker.tar.gz dest=/etc

- name: install {{ agent_type }}
  sudo: true
  shell: ./dcos_install.sh {{ agent_type }}
  args:
    chdir: "/tmp/dcos"
    executable: /usr/bin/bash
  when: get_install_script|changed

- name: configure proxy for universe
  template: src=environment.proxy dest=/var/lib/dcos/mesos-slave-common
  when: set_proxy == true

- name: configure proxy for mesos-fetcher
  template: src=mesos-slave.j2 dest=/etc/default/mesos-slave
  when: set_proxy == true


- name: check if dcos-{{ agent_type|replace("_", "-") }} is running
  command: systemctl status dcos-mesos-{{ agent_type|replace("_", "-") }}.service
  register: log_output
  until: log_output.stdout.find("active (running)") > -1
  retries: 10
  delay: 10
  when: get_install_script|changed

- name: restart service to take proxy settings
  command: systemctl restart dcos-mesos-{{ agent_type|replace("_", "-") }}
